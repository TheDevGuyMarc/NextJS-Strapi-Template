name: Strapi Multi-Stage CI/CD

on:
  push:
    branches:
      - develop
      - "release/*"
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ›  Checkout code
        uses: actions/checkout@v4

      - name: ðŸ“¦ Install dependencies
        working-directory: backend
        run: npm install

      - name: ðŸ”¨ Build Strapi
        working-directory: backend
        run: npm run build

      - name: âœ… Run Tests
        working-directory: backend
        run: npm test

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'PROD' || (startsWith(github.ref, 'refs/heads/release/') && 'QA') || 'DEV' }}
    steps:
      - name: ðŸš€ Deploy to AWS EC2 (Production Only)
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            cd /var/www/strapi
            git pull origin main
            npm install
            npm run build
            pm2 restart strapi

      - name: ðŸš€ Deploy to Azure App Service (QA)
        if: startsWith(github.ref, 'refs/heads/release/')
        uses: Azure/webapps-deploy@v2
        with:
          app-name: "strapi-app"
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: backend

      - name: ðŸš€ Deploy to Google Cloud Run (DEV)
        if: github.ref == 'refs/heads/develop'
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: strapi-app
          image: gcr.io/${{ secrets.GCP_PROJECT }}/strapi

      - name: ðŸš€ Deploy to Strator (QA)
        if: startsWith(github.ref, 'refs/heads/release/')
        run: |
          curl -X POST "https://api.strator.io/deploy" -H "Authorization: Bearer ${{ secrets.STRATOR_API_KEY }}" -d "{}"

      - name: ðŸš€ Deploy to IONOS (PROD)
        if: github.ref == 'refs/heads/main'
        run: |
          curl -X POST "https://api.ionos.com/deploy" -H "Authorization: Bearer ${{ secrets.IONOS_API_KEY }}" -d "{}"
